name: Deploy Super Streaming to DigitalOcean Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME}}/super-streaming:latest
            ${{ secrets.DOCKER_USERNAME}}/super-streaming:latest
          secrets: |
            "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}"
        # run: |
        #   docker build -t orhanma/super-streaming:latest --build-arg TMDB_API_KEY=${{ secrets.TMDB_API_KEY }} .
        #   docker push orhanma/super-streaming:latest

      - name: Install SSH client
        run: sudo apt-get install -y ssh

      - name: Deploy to Digital Ocean Droplet
        env:
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
          DO_SSH_KEY: ${{ secrets.DO_SSH_KEY }}
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.DO_SSH_KEY }}" | ssh-add -
          ssh -tt -o StrictHostKeyChecking=no root@${{ secrets.DO_DROPLET_IP }} <<EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/super-streaming:latest
            docker stop super-streaming || true
            docker rm super-streaming || true
            docker run -d --name super-streaming -p 80:3000 -e TMDB_API_KEY=${{ secrets.TMDB_API_KEY }} ${{ secrets.DOCKER_USERNAME }}/super-streaming:latest
          EOF
